enum Status {
    PENDING
    IN_PROGRESS
    APPROVED
    REJECTED
}

enum AppGender {
    MALE
    FEMALE
    OTHER
}

enum MaritalStatus {
    SINGLE
    MARRIED
    DIVORCED
    WIDOWED
}

enum OwnershipStatus {
    OWNED
    RENTED
    LEASED
    OTHER
}

enum PropertyType {
    RESIDENTIAL
    COMMERCIAL
    LAND
}

enum EmploymentStatus {
    SALARIED
    SELF_EMPLOYED
    BUSINESS_OWNER
}

enum LoanType {
    PERSONAL
    HOME
    CAR
    BUSINESS
    EDUCATION
    OTHER
}

enum DocumentType {
    PASSPORT_PHOTO
    NATIONAL_ID
    BIRTH_CERTIFICATE
    INCOME_PROOF
    BANK_STATEMENT
    TIN_CERTIFICATE
    EMPLOYMENT_PROOF
    UTILITY_BILL
    PROPERTY_DOCUMENT
    SUPPORTING_DOCUMENT
}

model ApplicationForm {
    id                          String                       @id @default(uuid())
    applicationId               String
    User                        User?                        @relation(fields: [userId], references: [id])
    userId                      String                       @unique
    createdAt                   DateTime                     @default(now())
    updatedAt                   DateTime                     @updatedAt
    CurrentAddress              CurrentAddress?              
    PermanentAddress            PermanentAddress?
    ApplicationUserInfo         ApplicationUserInfo?
    EmploymentFinancialInfo     EmploymentFinancialInfo?
    LoanRequestSpecifications   LoanRequestSpecifications?
    ExistingFinancialObligation ExistingFinancialObligation?
    DocumentFileUpload          DocumentFileUpload?
    
}

model ApplicationUserInfo {
    id                String          @id @default(uuid())
    fullName          String
    fatherName        String
    motherName        String
    spouseName        String
    dateOfBirth       String
    placeOfBirth      String
    gender            AppGender
    maritalStatus     MaritalStatus
    nid               String
    birthRegistration String?
    mobileNumber      String
    alternateNumber   String?
    emailAddress      String
    socialMediaLink   String[]
    typeOfProperty    PropertyType
    approximateValue  Float
    status            Status          @default(PENDING)
    applicationForm   ApplicationForm @relation(fields: [applicationFromId], references: [id])
    applicationFromId String          @unique
}

model CurrentAddress {
    id                String          @id @default(uuid())
    houseFlatNo       String
    streetRoad        String
    areaLocality      String
    city              String
    district          String
    postalCode        String
    lengthOfStayYears Int
    ownershipStatus   OwnershipStatus
    applicationForm   ApplicationForm @relation(fields: [applicationFromId], references: [id])
    applicationFromId String          @unique
}

model PermanentAddress {
    id                String           @id @default(uuid())
    houseFlatNo       String?
    streetRoad        String?
    areaLocality      String?
    city              String?
    district          String?
    postalCode        String?
    lengthOfStayYears Int?
    ownershipStatus   OwnershipStatus?
    applicationForm   ApplicationForm  @relation(fields: [applicationFromId], references: [id])
    applicationFromId String           @unique
}

model EmploymentFinancialInfo {
    id                         String           @id @default(uuid())
    employmentStatus           EmploymentStatus
    jobTitle                   String
    employerName               String
    officeAddress              String
    department                 String
    contactDetails             String
    businessName               String
    businessRegistrationNumber String
    employmentTenureYears      Int
    monthlyGrossIncome         Float
    otherSourcesOfIncome       String
    totalMonthlyExpenses       Float
    profession                 String
    taxIdentificationNumber    String
    currentCreditScore         Float
    applicationForm            ApplicationForm  @relation(fields: [applicationFromId], references: [id])
    applicationFromId          String           @unique
}

model LoanRequestSpecifications {
    id                   String          @id @default(uuid())
    loanType             LoanType
    loanAmountRequested  Float
    purposeOfLoan        String
    preferredLoanTenure  Int
    proposedEMIStartDate DateTime?
    repaymentPreferences String
    applicationForm      ApplicationForm @relation(fields: [applicationFromId], references: [id])
    applicationFromId    String          @unique
}

model ExistingFinancialObligation {
    id                    String          @id @default(uuid())
    lenderName            String
    loanBalance           Float
    monthlyEMI            Float
    remainingTenure       Int
    cardIssuer            String
    currentBalance        Float
    minimumMonthlyPayment Float
    type                  String
    balance               Float
    emi                   Float
    fullName              String?
    relationship          String?
    employment            String?
    monthlyIncome         Float?
    applicationForm       ApplicationForm @relation(fields: [applicationFromId], references: [id])
    applicationFromId     String          @unique
}

model DocumentFileUpload {
    id                Int             @id @default(autoincrement())
    userId            Int
    type              DocumentType
    filePath          String
    uploadedAt        DateTime        @default(now())
    fileSizeMB        Float?
    fileType          String?
    applicationForm   ApplicationForm @relation(fields: [applicationFromId], references: [id])
    applicationFromId String          @unique
}
