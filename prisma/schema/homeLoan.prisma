model HomeLoan {
    id                  String               @id @default(uuid())
    bankName            String
    amount              String
    coverImage          String?
    periodMonths        String
    processingFee       String
    interestRate        String
    monthlyEmi          String
    totalAmount         String
    eligibleLoan        String
    loanType            String               @default("HOME_LOAN")
    isActive            Boolean              @default(true)
    createdAt           DateTime             @default(now())
    updatedAt           DateTime             @updatedAt
    user                User?                @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId              String?
    FeaturesHomeLoan    FeaturesHomeLoan?
    EligibilityHomeLoan EligibilityHomeLoan?
    FeesChargesHomeLoan FeesChargesHomeLoan?

    @@map("homeLoan")
}

model FeaturesHomeLoan {
    id            String   @id @default(uuid())
    loanAmount    String
    minimumAmount String
    maximumAmount String
    loanTenure    String
    minimumYear   String
    maximumYear   String
    homeLoan      HomeLoan @relation(fields: [homeLoanId], references: [id], onDelete: Cascade)
    homeLoanId    String   @unique
}

model EligibilityHomeLoan {
    id                String   @id @default(uuid())
    condition         String
    offer             String
    minimumIncome     Int
    minimumExperience Int
    ageRequirement    Int
    homeLoan          HomeLoan @relation(fields: [homeLoanId], references: [id], onDelete: Cascade)
    homeLoanId        String   @unique
}

model FeesChargesHomeLoan {
    id                  String   @id @default(uuid())
    processingFee       String
    earlySettlementFee  String
    prepaymentFee       String
    LoanReSchedulingFee String
    penalCharge         String
    homeLoan            HomeLoan @relation(fields: [homeLoanId], references: [id], onDelete: Cascade)
    homeLoanId          String   @unique
}
