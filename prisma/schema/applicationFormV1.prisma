enum MaritalStatus {
  SINGLE
  MARRIED
  DIVORCED
  WIDOWED
}

enum LoanStatus {
  SUBMITTED
  IN_PROCESS
  PENDING
  APPROVED
  REJECTED
}

enum DocumentType {
  PASSPORT
  ID_CARD
  INCOME_PROOF
  BANK_STATEMENT
  TIN_CERTIFICATE
  EMPLOYMENT_PROOF
  UTILITY_BILL
  PROPERTY_DOCUMENT
  ADDITIONAL
}

model LoanApplicationForm {
  id            String     @id @default(uuid())
  isDeleted     Boolean    @default(false)
  adminNotes    String?
  applicationId String?    @unique
  status        LoanStatus @default(SUBMITTED)

  // Relations
  personalInfo         PersonalInfo?
  residentialInfo      ResidentialInfo?
  employmentInfo       EmploymentInfo?
  loanRequest          LoanRequest?
  financialObligations FinancialObligation[]
  documents            Document[]
  guarantorInfo        GuarantorInfo?
  user                 User?                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId               String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([createdAt])
}

model PersonalInfo {
  id                String        @id @default(uuid())
  fullName          String
  fathersName       String
  mothersName       String
  spouseName        String
  dateOfBirth       String
  placeOfBirth      String
  gender            String
  maritalStatus     MaritalStatus
  nationalId        String
  birthRegistration String
  mobileNumber      String
  alternateMobile   String
  email             String
  socialMedia       String

  loanApplicationForm   LoanApplicationForm? @relation(fields: [loanApplicationFormId], references: [id], onDelete: Cascade)
  loanApplicationFormId String               @unique
}

model ResidentialInfo {
  id String @id @default(uuid())

  permanentHouseNo    String
  permanentStreet     String
  permanentArea       String
  permanentCity       String
  permanentDistrict   String
  permanentPostalCode String
  permanentStayLength String
  permanentOwnership  String

  sameAsPermanent Boolean

  presentHouseNo    String
  presentStreet     String
  presentArea       String
  presentCity       String
  presentDistrict   String
  presentPostalCode String
  presentStayLength String
  presentOwnership  String

  propertyType     String
  approximateValue String

  loanApplicationForm   LoanApplicationForm? @relation(fields: [loanApplicationFormId], references: [id], onDelete: Cascade)
  loanApplicationFormId String               @unique
}

model EmploymentInfo {
  id String @id @default(uuid())

  employmentStatus String
  jobTitle         String

  employerName       String
  employerAddress    String
  employerDepartment String
  employerContact    String

  businessName       String
  registrationNumber String
  tenure             String
  monthlyIncome      String
  otherIncome        String
  householdExpenses  String
  tin                String
  creditScore        String

  loanApplicationForm   LoanApplicationForm? @relation(fields: [loanApplicationFormId], references: [id], onDelete: Cascade)
  loanApplicationFormId String               @unique
}

model LoanRequest {
  id                   String @id @default(uuid())
  loanType             String
  loanAmount           String
  purpose              String
  tenure               String
  emiStartDate         String
  repaymentPreferences String

  loanApplicationForm   LoanApplicationForm? @relation(fields: [loanApplicationFormId], references: [id], onDelete: Cascade)
  loanApplicationFormId String               @unique
}

model FinancialObligation {
  id String @id @default(uuid())

  lenderName      String
  loanBalance     String
  monthlyEMI      String
  remainingTenure String

  issuer         String
  currentBalance String
  minimumPayment String

  liabilityType    String
  liabilityBalance String
  liabilityEMI     String

  coApplicantName     String
  coApplicantRelation String
  coApplicantIncome   String

  loanApplicationFormId String
  loanApplicationForm   LoanApplicationForm @relation(fields: [loanApplicationFormId], references: [id], onDelete: Cascade)

  @@index([loanApplicationFormId])
}

model Document {
  id                    String              @id @default(uuid())
  type                  DocumentType
  url                   String
  loanApplicationFormId String
  loanApplicationForm   LoanApplicationForm @relation(fields: [loanApplicationFormId], references: [id], onDelete: Cascade)

  @@index([loanApplicationFormId])
}

model GuarantorInfo {
  id                                 String   @id @default(uuid())
  personalfullName                   String
  personalfathersOrHusbandsName      String
  personalmothersName                String
  personaldateOfBirth                DateTime
  personalnationality                String
  personalnid                        String
  personalbirthRegistration          String?
  personalmobileNumber               String
  personalemailAddress               String
  personalrelationWithGuarantor      String
  personalpresentAddress             String
  personalpermanentAndMailingAddress String
  personalworkAddress                String
  personaladdress                    String
  personalprofession                 String
  personalmonthlyIncome              String
  personalemployer                   String

  businessfullName                   String
  businessfathersOrHusbandsName      String
  businessmothersName                String
  businessdateOfBirth                DateTime
  businessnationality                String
  businessnid                        String
  businessbirthRegistration          String?
  businessmobileNumber               String
  businessemailAddress               String
  businessrelationWithGuarantor      String
  businesspresentAddress             String
  businesspermanentAndMailingAddress String
  businessworkAddress                String
  businessaddress                    String
  businessprofession                 String
  businessmonthlyIncome              String
  businessemployer                   String

  loanApplicationForm   LoanApplicationForm? @relation(fields: [loanApplicationFormId], references: [id], onDelete: Cascade)
  loanApplicationFormId String               @unique
}
