model CarLoan {
  id                 String              @id @default(uuid())
  bankName           String
  amount             String
  coverImage         String?
  periodMonths       String
  processingFee      String
  interestRate       String
  monthlyEmi         String
  totalAmount        String
  eligibleLoan       String
  loanType           String              @default("CAR_LOAN")
  isActive           Boolean             @default(true)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  eligibilityId      String?
  feesChargesId      String?
  featuresId         String?
  userId             String?
  user               User?               @relation(fields: [userId], references: [id], onDelete: Cascade)
  FeaturesCarLoan    FeaturesCarLoan?
  EligibilityCarLoan EligibilityCarLoan?
  FeesChargesCarLoan FeesChargesCarLoan?

  @@map("carLoan")
}

model FeaturesCarLoan {
  id            String  @id @default(uuid())
  loanAmount    String
  minimumAmount String
  maximumAmount String
  loanTenure    String
  minimumYear   String
  maximumYear   String
  carLoanId     String  @unique
  carLoan       CarLoan @relation(fields: [carLoanId], references: [id], onDelete: Cascade)
}

model EligibilityCarLoan {
  id                String  @id @default(uuid())
  condition         String
  offer             String
  minimumIncome     Int
  minimumExperience Int
  ageRequirement    Int
  carLoanId         String  @unique
  carLoan           CarLoan @relation(fields: [carLoanId], references: [id], onDelete: Cascade)
}

model FeesChargesCarLoan {
  id                  String  @id @default(uuid())
  processingFee       String
  earlySettlementFee  String
  prepaymentFee       String
  LoanReSchedulingFee String
  penalCharge         String
  carLoanId           String  @unique
  carLoan             CarLoan @relation(fields: [carLoanId], references: [id], onDelete: Cascade)
}
