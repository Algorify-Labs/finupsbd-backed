model CarLoan {
    id                 String              @id @default(uuid())
    bankName           String
    amount             String
    coverImage         String?
    periodMonths       String
    processingFee      String
    interestRate       String
    monthlyEmi         String
    totalAmount        String
    eligibleLoan       String
    loanType           String              @default("CAR_LOAN")
    isActive           Boolean             @default(true)
    createdAt          DateTime            @default(now())
    updatedAt          DateTime            @updatedAt
    eligibilityId      String?
    feesChargesId      String?
    featuresId         String?
    user               User?               @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId             String?
    FeaturesCarLoan    FeaturesCarLoan?
    EligibilityCarLoan EligibilityCarLoan?
    FeesChargesCarLoan FeesChargesCarLoan?

    @@map("carLoan")
}

model FeaturesCarLoan {
    id            String  @id @default(uuid())
    loanAmount    String
    minimumAmount String
    maximumAmount String
    loanTenure    String
    minimumYear   String
    maximumYear   String
    carLoan       CarLoan @relation(fields: [carLoanId], references: [id], onDelete: Cascade)
    carLoanId     String  @unique
}

model EligibilityCarLoan {
    id                String  @id @default(uuid())
    condition         String
    offer             String
    minimumIncome     Int
    minimumExperience Int
    ageRequirement    Int
    carLoan           CarLoan @relation(fields: [carLoanId], references: [id], onDelete: Cascade)
    carLoanId         String  @unique
}

model FeesChargesCarLoan {
    id                  String  @id @default(uuid())
    processingFee       String
    earlySettlementFee  String
    prepaymentFee       String
    LoanReSchedulingFee String
    penalCharge         String
    carLoan             CarLoan @relation(fields: [carLoanId], references: [id], onDelete: Cascade)
    carLoanId           String  @unique
}
