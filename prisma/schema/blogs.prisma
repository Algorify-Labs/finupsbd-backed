model Blog {
  id              String     @id @default(uuid())
  title           String
  slug            String
  content         String
  userId          String
  publishedDate   DateTime?  @default(now())
  status          PostStatus @default(PUBLISHED)
  excerpt         String?
  category        String?
  tags            String[]
  coverImage      String?
  readingTime     Int?
  metaTitle       String?
  metaDescription String?
  attachments     String[]
  language        String     @default("en")
  permissions     String     @default("public")
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  user            User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments        Comment[]

  @@map("blogs")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  userId    String
  blogId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  blog      Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade)
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
